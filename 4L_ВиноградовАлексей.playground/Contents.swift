import UIKit

class MainCarOptions {
    
    enum EngineAction {
        case start
        case stop
    }
    
    enum Window{
        case frontLeft
        case frontRight
        case rearLeft
        case rearRight
    }
    
    enum WindowsAction{
        case open
        case close
    }
    
    var model: String
    var year: Int
    var windowsState: [Window : WindowsAction] = { () -> [Window : WindowsAction] in
        var windowsState = [Window : WindowsAction]()
        windowsState[.frontLeft] = WindowsAction.close
        windowsState[.frontRight] = WindowsAction.close
        windowsState[.rearLeft] = WindowsAction.close
        windowsState[.rearRight] = WindowsAction.close
        return windowsState
    }()
    var engineState: EngineAction = .stop
    
    init(model: String, year: Int){
        self.model = model
        self.year = year
    }
    
    func showWindowsState(){
        print("   –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∫–æ–Ω:")
        for window in self.windowsState {
            switch window {
            case (.frontLeft, .close):
                print("     - –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.frontRight, .close):
                print("     - –æ–∫–Ω–æ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.rearLeft, .close):
                print("     - –∑–∞–¥–Ω–µ–µ –ª–µ–≤–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.rearRight, .close):
                print("     - –∑–∞–¥–Ω–µ–µ –ø—Ä–∞–≤–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.frontLeft, .open):
                print("     - –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ")
            case (.frontRight, .open):
                print("     - –æ–∫–Ω–æ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–æ")
            case (.rearLeft, .open):
                print("     - –∑–∞–¥–Ω–µ–µ –ª–µ–≤–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ")
            case (.rearRight, .open):
                print("     - –∑–∞–¥–Ω–µ–µ –ø—Ä–∞–≤–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ")
            }
        }
    }
    
    func showEngineState(){
        print("   –°—Ç–∞—Ç—É—Å –¥–≤–∏–≥–∞—Ç–µ–ª—è:")
        switch self.engineState {
        case .stop:
            print("     –î–≤–∏–≥–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        case .start:
            print("     –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω")
        }
    }
    
}


class SportCar: MainCarOptions {
    var icon: String = "üöó"
    var rearTrunkValue: Double?
    var frontTrunkValue: Double = 0.0
    
    
    init(model: String, year: Int, rearTrunkValue: Double){
        super.init(model: model, year: year)
        self.rearTrunkValue = rearTrunkValue
    }
    
    func openWindow(window: Window){
        self.windowsState[window] = .open
    }
    
    func closeWindow(window: Window){
        self.windowsState[window] = .close
    }
    
    func stopEngine(){
        self.engineState = .stop
    }
    
    func startEngine(){
        self.engineState = .start
    }
    
    func whatAboutThisCar(){
        print("\(icon) –í–∞—à–∞ –º–∞—à–∏–Ω–∞ \(self.model) \(self.year) –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞.")
        guard let rearTrunkValue = self.rearTrunkValue else {return}
        if rearTrunkValue < 300.0 {
            print("–ë–∞–≥–∞–∂–Ω–∏–∫ —Å–æ–≤—Å–µ–º –º–∞–ª–µ–Ω—å–∫–∏–π - \(rearTrunkValue) –ª–∏—Ç—Ä–æ–≤")
        } else {
            print("–ë–∞–≥–∞–∂–Ω–∏–∫ –æ–±—ä–µ–º–æ–º \(rearTrunkValue) –ª–∏—Ç—Ä–æ–≤")
        }
        
        if frontTrunkValue == 0.0 {
            print("–ü–µ—Ä–µ–¥–Ω–µ–≥–æ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –Ω–µ—Ç, —ç—Ç–æ –≤–∞–º –Ω–µ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å")
        } else {
            print("–ï—Å—Ç—å –¥–∞–∂–µ –ø–µ—Ä–µ–¥–Ω–∏–π –±–∞–≥–∞–∂–Ω–∏–∫ –æ–±—ä–µ–º–æ–º \(frontTrunkValue) –ª–∏—Ç—Ä–æ–≤")
        }
        
        self.showWindowsState()
        self.showEngineState()
        print("\n\n")
    }
}


class TrunkCar: MainCarOptions {
    
    enum trunkStatus: String {
        case open = "\n–ö—É–∑–æ–≤ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"
        case close = "–ö—É–∑–æ–≤ –∑–∞–∫—Ä—ã—Ç\n"
    }
    
    var icon: String = "üöö"
    var bigTrunkValue: Double?
    var cargoValue: Double = 0.0
    var trunkStatus: trunkStatus = .close
    
    init(model: String, year: Int, bigTrunkValue: Double){
        super.init(model: model, year: year)
        self.bigTrunkValue = bigTrunkValue
        self.windowsState = { () -> [Window : WindowsAction] in
            var windowsState = [Window : WindowsAction]()
            windowsState[.frontLeft] = WindowsAction.close
            windowsState[.frontRight] = WindowsAction.close
            return windowsState
        }()
    }
    
    override func showWindowsState(){
        print("   –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∫–æ–Ω:")
        for window in self.windowsState {
            switch window {
            case (.frontLeft, .close):
                print("     - –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.frontRight, .close):
                print("     - –æ–∫–Ω–æ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –∑–∞–∫—Ä—ã—Ç–æ")
            case (.frontLeft, .open):
                print("     - –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ")
            case (.frontRight, .open):
                print("     - –æ–∫–Ω–æ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–æ")
            default:
                print("     - –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –æ–∫–Ω–∞")
            }
        }
    }
    
    func openTrunk(){
        self.trunkStatus = .open
        print(self.trunkStatus.rawValue)
    }
    
    func closeTrunk(){
        self.trunkStatus = .close
        print(self.trunkStatus.rawValue)
    }
    
    func addCargo(newCargo: Double){
        self.openTrunk()
        guard let bigTrunkValue = self.bigTrunkValue else {return}
        if self.cargoValue + newCargo > bigTrunkValue {
            print("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≥—Ä—É–∑–∞, —É–±–∞–≤—å—Ç–µ \(String(format: "%.2f", self.cargoValue + newCargo - bigTrunkValue)) –ª–∏—Ç—Ä–∞(–æ–≤)")
            self.closeTrunk()
            return
        }
        self.cargoValue += newCargo
        print("–î–æ–±–∞–≤–∏–ª–∏ –≥—Ä—É–∑–∞: \(String(format: "%.2f", newCargo)) –ª–∏—Ç—Ä–∞(–æ–≤)")
        self.closeTrunk()
    }
    
    func removeCargo(removedCargo: Double){
        self.openTrunk()
        if self.cargoValue - removedCargo < 0 {
            print("–í –∫—É–∑–æ–≤–µ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –≥—Ä—É–∑–∞, —Ç–∞–º –≤—Å–µ–≥–æ \(String(format: "%.2f", self.cargoValue)) –ª–∏—Ç—Ä–∞(–æ–≤)")
            self.closeTrunk()
            return
        }
        self.cargoValue -= removedCargo
        print("–£–±–∞–≤–∏–ª–∏ –≥—Ä—É–∑–∞: \(String(format: "%.2f", removedCargo)) –ª–∏—Ç—Ä–∞(–æ–≤)")
        self.closeTrunk()
    }
    
    func openWindow(window: Window){
        if window == .rearLeft || window == .rearRight {
            print("–≠—Ç–∏—Ö –æ–∫–æ–Ω –≤ –≥—Ä—É–∑–æ–≤–∏–∫–µ –Ω–µ—Ç\n")
            return
        }
        self.windowsState[window] = .open
    }
    
    func closeWindow(window: Window){
        if window == .rearLeft || window == .rearRight {
            print("–≠—Ç–∏—Ö –æ–∫–æ–Ω –≤ –≥—Ä—É–∑–æ–≤–∏–∫–µ –Ω–µ—Ç \n")
            return
        }
        self.windowsState[window] = .close
    }
    
    func stopEngine(){
        self.engineState = .stop
    }
    
    func startEngine(){
        self.engineState = .start
    }
    
    func whatAboutThisCar(){
        print("\(icon) –í–∞—à –≥—Ä—É–∑–æ–≤–∏–∫ \(self.model) \(self.year) –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞.")
        print("–û–±—ä–µ–º –∫—É–∑–æ–≤–∞ - \(String(format: "%.2f", self.bigTrunkValue!) ) –ª–∏—Ç—Ä–æ–≤")
        print("–ì—Ä—É–∑–∞ –≤ –∫—É–∑–æ–≤–µ - \(String(format: "%.2f", self.cargoValue)) –ª–∏—Ç—Ä–æ–≤")
        self.showWindowsState()
        self.showEngineState()
        print("\n\n")
    }
}


var mazda = SportCar(model: "Mazda 6", year: 2019, rearTrunkValue: 256.8)
mazda.whatAboutThisCar()
mazda.openWindow(window: .frontLeft)
mazda.openWindow(window: .rearRight)
mazda.whatAboutThisCar()
mazda.closeWindow(window: .frontLeft)
mazda.startEngine()
mazda.whatAboutThisCar()


var tatra = TrunkCar(model: "Tatra", year: 1978, bigTrunkValue: 3912.00)
tatra.whatAboutThisCar()
tatra.openWindow(window: .rearLeft)
tatra.openWindow(window: .frontLeft)
tatra.startEngine()
tatra.whatAboutThisCar()
tatra.addCargo(newCargo: 376.98)
tatra.whatAboutThisCar()
tatra.addCargo(newCargo: 120.99)
tatra.whatAboutThisCar()
tatra.removeCargo(removedCargo: 1349.43)
tatra.removeCargo(removedCargo: 108.65)
tatra.whatAboutThisCar()
